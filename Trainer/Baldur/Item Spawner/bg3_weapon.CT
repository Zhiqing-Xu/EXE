<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
    <CheatEntries>
        <CheatEntry>
            <ID>1</ID>
            <Description>"Weapons"</Description>
            <Options moHideChildren="1"/>
            <GroupHeader>1</GroupHeader>
            <CheatEntries>
                <CheatEntry>
                    <ID>2</ID>
                    <Description>"_OTHER_w"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c9ebcfae-8c9a-4acc-8a30-da7830b32121",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>3</ID>
                    <Description>"CHA_CompassSpear"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7fdf8022-629a-4b34-b0c0-3295bfb2903d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>4</ID>
                    <Description>"CRE_BloodOfLathander"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"96a35552-0c05-4df0-9974-2a8f142e4be6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>5</ID>
                    <Description>"DEN_Apprentice_DaggerOfShar"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"12f1e6ce-7042-481b-879b-fa81c7688c7d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>6</ID>
                    <Description>"DEN_CapturedGoblin_MurderDagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"520d3f36-af72-4385-89af-f585c8edc9cf",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>7</ID>
                    <Description>"DEN_FaithwardenStaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"13f6ff0c-08c4-4e9f-a624-511389b68dc2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>8</ID>
                    <Description>"DEN_HalsinBlade"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0de9e072-7048-4d07-8bbe-79e0591674c2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>9</ID>
                    <Description>"DEN_TunnelStaff"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4893bf4e-97e1-48e0-ada8-6bbf115ad68b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>10</ID>
                    <Description>"DLC_DD_WPN_Sebilles_Needle"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0eadec28-a9ce-4dbf-be86-63f58a49b902",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>11</ID>
                    <Description>"END_Emperor_Staff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ff63ca4a-a990-43dc-a28b-c6bed7bfa617",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>12</ID>
                    <Description>"FOR_IncompleteMasterwork_SussurDagger"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8733edb7-f04e-4b6d-ad48-7d49fb782bef",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>13</ID>
                    <Description>"FOR_IncompleteMasterwork_SussurGreatsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"44dedec0-df82-4ed3-b9ca-147bd830e312",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>14</ID>
                    <Description>"FOR_IncompleteMasterwork_SussurSickle"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6b95bb45-41c3-4954-ac2f-ef1aa169b0b6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>15</ID>
                    <Description>"FOR_TrueSoul_Spear"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a2f4c951-7db4-4d60-9888-f2ad50af7110",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>16</ID>
                    <Description>"FOR_Village_Blacksmith_FineSword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"65b41886-823d-416b-b53e-c332a3aad530",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>17</ID>
                    <Description>"FOR_WebStaff"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"baa8bd91-09ec-4c92-a0e1-4a5a9d4ea8ed",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>18</ID>
                    <Description>"GOB_DrowCommander_Mace"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4b0131e0-875a-4f3c-8b41-dbf653857d00",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>19</ID>
                    <Description>"GOB_GoblinKing_Warhammer"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"37a29c63-3fcd-43bd-8021-c363dcc852bc",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>20</ID>
                    <Description>"GOB_PainPriest_Dagger"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"11aa209f-6e42-40bd-a12c-aa33445c21ea",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>21</ID>
                    <Description>"GOB_PainPriest_Handaxe"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5c996c03-99e9-40c1-8acf-d761550d26f5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>22</ID>
                    <Description>"GOB_PainPriest_Scourge"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b1dc33ba-c595-4036-9683-26635f297e44",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>23</ID>
                    <Description>"GOB_Pens_Dagger"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"529fe100-de0b-4a34-a669-4861ee4538a2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>24</ID>
                    <Description>"GOB_Torturer_Spear"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1fea9dfa-96a6-43c5-bce8-34452baa073e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>25</ID>
                    <Description>"HAG_SwampedHero_OldFancyGreatsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0bf738cf-c0b7-471c-b66e-91578a6f657f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>26</ID>
                    <Description>"HAV_MAG_ShadowRending_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9e31fd58-c2a6-487c-9054-913aecd5ce32",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>27</ID>
                    <Description>"HAV_SpearOfSelune"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"158e6f29-89e9-4279-8f8f-85078f047225",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>28</ID>
                    <Description>"LOW_Elfsong_EmperorSword_LongSword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"777cb3d5-0689-4cfd-9719-b460897cb9e6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>29</ID>
                    <Description>"LOW_OrphicHammer"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9ff968d4-08ff-4da1-a288-959ac8d7abe1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>30</ID>
                    <Description>"LOW_OskarsBeloved_TorchOfRevocation"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"88be0257-cd9a-4922-85c9-178ad8579af2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>31</ID>
                    <Description>"LOW_OskarsBeloved_TorchOfTrueRevocation"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e88dd9ea-1b8b-4edc-9fee-3c7ec286ba60",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>32</ID>
                    <Description>"MAG_Ambusher_Shortsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7a96f6cc-c6bb-4caf-a1ab-a86af3fa21a5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>33</ID>
                    <Description>"MAG_ArcaneAbsorption_Dagger"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"cf89e4d8-485c-4cef-8098-959834cc8ac1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>34</ID>
                    <Description>"MAG_BasicEnchanted_Quarterstaff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1e8e2d4d-904d-4367-ad28-30012915f458",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>35</ID>
                    <Description>"MAG_BG_BlightBringer_Shortbow"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9eed107f-ff11-4f50-ac7a-6a8b8344e148",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>36</ID>
                    <Description>"MAG_BG_Darkfire_Shortbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9b5d79a8-98ad-4d67-9730-ba0453eee488",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>37</ID>
                    <Description>"MAG_BG_DragonsBreath_Glaive"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"89f511d6-6d36-4480-9ee8-6e0145c960ef",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>38</ID>
                    <Description>"MAG_BG_Harmonium_Halberd"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1060b5af-6119-4237-9e8f-b3a1a054d8c9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>39</ID>
                    <Description>"MAG_BG_Harold_HeavyCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"22bf3680-a37f-4a04-b036-2865805f3d60",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>40</ID>
                    <Description>"MAG_BG_OfAges_Flail"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"01338cbe-9ff6-485e-9052-838c82a2a753",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>41</ID>
                    <Description>"MAG_BG_OfEasthaven_Defender_Flail"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"cf19058b-2be6-411c-9227-7058053fa37a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>42</ID>
                    <Description>"MAG_BG_OfSpeed_LightCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"664ff469-770a-4597-9be2-506465e5486f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>43</ID>
                    <Description>"MAG_BG_OfTheBanshee_Bow"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c040d1fc-4804-4774-8367-6dfa397e27e2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>44</ID>
                    <Description>"MAG_BG_Sarevok_OfChaos_Greatsword"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e76b0896-dc70-4fb9-b202-cf5efc2de15a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>45</ID>
                    <Description>"MAG_BG_Sarevok_OfChaos_Greatsword_NoPassives"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ed8c8311-fb23-4620-95a9-8f2b24e10c91",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>46</ID>
                    <Description>"MAG_Bhaalist_Paralyzing_Dagger"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0cfbd2ef-6eb3-4283-b0c9-8e23a4f9bf8c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>47</ID>
                    <Description>"MAG_Blindside_Shortsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f06c0554-bba8-4036-ac92-1b225a578f57",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>48</ID>
                    <Description>"MAG_Bloodsoaked_Greataxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"58925ad8-f9da-482c-82da-70bede9bf2b8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>49</ID>
                    <Description>"MAG_Bonded_Baneful_Shortsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3b578a43-222e-480b-8a22-2c424471099f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>50</ID>
                    <Description>"MAG_Bonded_Lethal_Longsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"faf8d98c-103d-4524-b609-41d3f1790c5a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>51</ID>
                    <Description>"MAG_Bonded_Shocking_Warhammer"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"50940e05-ba59-4569-a71f-79af34b605a8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>52</ID>
                    <Description>"MAG_Bonded_Throwing_Battleaxe"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d2d5141a-9804-49b6-96e2-5738d85feffa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>53</ID>
                    <Description>"MAG_ChargedLightning_Longbow"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"38b80bf8-9cf8-4495-8267-eb84c7779d0c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>54</ID>
                    <Description>"MAG_ChargedLightning_Quarterstaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"53d6be1b-eac1-4b88-83ab-ba17956eca57",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>55</ID>
                    <Description>"MAG_ChargedLightning_Trident"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"cfdc8fdc-9f59-415f-8098-70035585eadb",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>56</ID>
                    <Description>"MAG_Cleric_Devotees_Mace"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f8578a13-a857-4043-91e4-8101c9e7c004",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>57</ID>
                    <Description>"MAG_Cold_IncreaseColdDamageOnCast_Staff"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"cab10a42-8c85-459a-9d68-b4836388c022",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>58</ID>
                    <Description>"MAG_Colossal_Greatsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"26ac9758-19f4-4867-9d5d-57437d6b9794",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>59</ID>
                    <Description>"MAG_Combat_Quarterstaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"59cd94ae-c26c-459a-89d8-a1f1ebdd13ba",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>60</ID>
                    <Description>"MAG_Corrosive_Flail"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0a44de18-b355-4692-9256-d920b9bb25b7",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>61</ID>
                    <Description>"MAG_CQCaster_GainArcaneChargeOnDamage_Quarterstaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"26c24ccf-8f4a-44a9-ba56-e1d8e9d49ae3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>62</ID>
                    <Description>"MAG_Critical_CriticalCombo_BattleAxe"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"35465a58-d21d-46b4-a429-64d187b0781f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>63</ID>
                    <Description>"MAG_Cunning_HandCrossbow"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"759a080f-bd13-4cd8-a417-1677b8ee9d73",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>64</ID>
                    <Description>"MAG_Dawn_Morningstar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"907df6ab-93ab-4f51-bf57-ac767d48e382",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>65</ID>
                    <Description>"MAG_DeadShot_Longbow"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"269b2b03-aaaf-4635-98e2-e9b32dab5ffa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>66</ID>
                    <Description>"MAG_Drowelf_SpiderSnare_Longsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"67ae6ce9-08fd-4ee7-9343-9a408f8ad9fa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>67</ID>
                    <Description>"MAG_Druid_IronWood_Club"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"67ce5d1a-e0cd-48ce-94a9-9a17615e13d9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>68</ID>
                    <Description>"MAG_Duergar_Sword_KingsKnife"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"025e162a-45ec-4f4c-89da-04d8e8dfe606",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>69</ID>
                    <Description>"MAG_Enforcer_NonLethalFright_Club"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d3cd1f93-64bb-4d57-bafc-19ee1cefc564",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>70</ID>
                    <Description>"MAG_Finesse_Glaive"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0a6e5a22-414d-4f4e-b9e1-6083822648c4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>71</ID>
                    <Description>"MAG_Finesse_Longsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"56a7539c-7c5c-4c44-b8e0-5ff2e5beb4e9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>72</ID>
                    <Description>"MAG_Fire_AlwaysDippedInFire_Greatsword"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"660483f6-8eb3-45be-88a4-327f9d417026",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>73</ID>
                    <Description>"MAG_Fire_BurningDamage_Longsword"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c3647bf7-8eea-45cd-8cec-a90b21cd8c07",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>74</ID>
                    <Description>"MAG_Fire_FireDamage_Quarterstaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8aaf86a8-c884-4368-bcc5-1f91fd210624",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>75</ID>
                    <Description>"MAG_Fire_HeatOnWeaponDamage_Battleaxe"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b8f28da8-f8f5-4679-8c5f-ecc505811208",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>76</ID>
                    <Description>"MAG_Fire_IncreasePiercingDamageToBurning_HandCrossbow"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3c9f6e52-1597-4ba6-ae36-d532c0e8bad5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>77</ID>
                    <Description>"MAG_Fire_IncreaseSlashingDamageToBurning_Handaxe"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4f67b6cb-ccc4-497e-b5d3-2804726e8706",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>78</ID>
                    <Description>"MAG_FlamingFist_FlamingBlade"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d4cb8410-096a-480e-88fb-7224c6b654f6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>79</ID>
                    <Description>"MAG_FlamingFist_StaffOfFire"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b2758975-82c2-4405-ad2d-99cfa21059ff",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>80</ID>
                    <Description>"MAG_Force_Pike"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"661ac892-ee92-46ca-b1b4-1c1df10c7bf0",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>81</ID>
                    <Description>"MAG_FreeCast_Shortsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3fab682c-abc7-43f0-b9bb-9faa9f612d8d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>82</ID>
                    <Description>"MAG_Frost_Offhand_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a8661143-d94d-4f49-a92f-cbd0a9a500a1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>83</ID>
                    <Description>"MAG_Gandrel_UndeadSlayer_HeavyCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"12710611-6c85-4280-a597-8286e18f5740",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>84</ID>
                    <Description>"MAG_Giantslayer_Greatsword"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7219fca3-5f41-43a0-8253-f4c09d8b6308",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>85</ID>
                    <Description>"MAG_Githborn_Mindcrusher_Greatsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"523a959d-4101-4beb-9a8e-276c3f687c02",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>86</ID>
                    <Description>"MAG_Githborn_TelekineticBolt_HeavyCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b11756a8-519a-406c-be36-c3603c3edae1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>87</ID>
                    <Description>"MAG_Gortash_HeavyCrossbow"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"45d888b5-e002-4bb8-85d7-6df569aceaa4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>88</ID>
                    <Description>"MAG_GreaterNecromancy_Staff"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ecb02247-a407-445e-8046-856133d198bf",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>89</ID>
                    <Description>"MAG_GreaterSilver_Greatsword"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f01c3f5d-c542-420f-86c5-bdddf7819e29",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>90</ID>
                    <Description>"MAG_Harpers_Harmonizing_Rapier"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"530a5c21-0f52-428f-bf41-ef33fd6c447b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>91</ID>
                    <Description>"MAG_Harpers_OfWeapons_Quarterstaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"111e30c6-ced0-478b-9922-3428cb50b7e1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>92</ID>
                    <Description>"MAG_Harpers_SingingSword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5e7030e9-d59c-4edf-8278-8981a8e8baef",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>93</ID>
                    <Description>"MAG_HAV_Sylvan_Scimitar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b9656931-da39-4024-92a2-f45264593b14",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>94</ID>
                    <Description>"MAG_HAV_ThornBlade_Scimitar"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3b44007e-eb36-4c03-b367-6619299b6994",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>95</ID>
                    <Description>"MAG_HigherNecromancy_Staff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"bb1fef3b-ac2b-427e-9b6f-273a8c7e4ff8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>96</ID>
                    <Description>"MAG_Hunting_Shortbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a1d1634c-02e6-4428-a822-7603e9163264",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>97</ID>
                    <Description>"MAG_Illithid_MindOverload_Weapon_Longsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0a024202-84d0-4466-a958-76b2a163781c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>98</ID>
                    <Description>"MAG_Infernal_Hellbeard_Halberd"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"35682866-bd23-44a2-9a25-6a3ba2ee2b48",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>99</ID>
                    <Description>"MAG_Infernal_Longsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e1c37edf-ad63-44a5-8fd4-44687169747e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>100</ID>
                    <Description>"MAG_Infernal_Mace"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8e13f737-40e5-4be5-817e-1c5d6199b08b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>101</ID>
                    <Description>"MAG_Infernal_Mace_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"70909020-27ff-4a63-a03f-30d4818dd1c3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>102</ID>
                    <Description>"MAG_Infernal_Spear"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e8f6c0aa-de5c-45a5-97fd-599addc036f1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>103</ID>
                    <Description>"MAG_Infernal_Warhammer"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"855f49c9-5724-4df9-a23d-0af82116af76",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>104</ID>
                    <Description>"MAG_Invisible_Pike"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"cd6c6adc-8792-4378-8c63-8169cfad6c55",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>105</ID>
                    <Description>"MAG_Justiciar_Scimitar"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"74ecc6e4-ee5d-4cd8-96cb-dd677a4acc82",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>106</ID>
                    <Description>"MAG_Ketheric_Warhammer"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1f8252a3-3227-48a3-b500-996e571cac68",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>107</ID>
                    <Description>"MAG_Kuotoa_Lightning_Spear"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5dc55fa5-40df-4e67-ab78-d9320176e614",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>108</ID>
                    <Description>"MAG_LC_BurnOnDamage_Scimitar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d5b4619a-c65f-42eb-b5bb-055aa1249a38",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>109</ID>
                    <Description>"MAG_LC_CazadorVampiric_Quarterstaff"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"cf42b0d0-89d8-4756-b6d7-1e258dceeab0",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>110</ID>
                    <Description>"MAG_LC_ChainDevil_Flail"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8c733d14-6cbc-4227-9d87-0e42ce0965c4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>111</ID>
                    <Description>"MAG_LC_Counterspell_Quarterstaff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fcbb2c63-ac59-42e0-ad0b-d91cf9a47b60",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>112</ID>
                    <Description>"MAG_LC_Fleshred_Longsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5c41bb72-9a50-4d98-a12a-0de374c43f19",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>113</ID>
                    <Description>"MAG_LC_Fleshrend_Shortsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3db6b7be-1e36-405e-94fd-cf5a9f0e4b68",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>114</ID>
                    <Description>"MAG_LC_Frigid_Trident"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"503d3d60-8798-4c65-bec1-347392733c86",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>115</ID>
                    <Description>"MAG_LC_Lorroakan_Quarterstaff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e8eca87d-e01f-40d3-8097-a787602f1dc9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>116</ID>
                    <Description>"MAG_LC_OfTheFist_MorningStar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"83715b12-8d39-48b7-a981-fe50a4ec2d4e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>117</ID>
                    <Description>"MAG_LC_OfTheRam_Quarterstaff"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"be48362b-f8f7-499d-ae64-156374852387",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>118</ID>
                    <Description>"MAG_LC_PirateCommander_Scimitar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f9100179-19f6-49f9-8ad5-bda4d21220bc",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>119</ID>
                    <Description>"MAG_LC_RadiantLight_Rapier"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"467b9a2e-b7e8-4c01-b744-fae8e3b960fd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>120</ID>
                    <Description>"MAG_LC_Umberlee_Cold_Sickle"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5b4b10cd-089f-4675-8392-5bfa6749d79c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>121</ID>
                    <Description>"MAG_LC_UndeadSlayer_Crossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"85f60e49-d868-4897-afc5-b22e965a0471",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>122</ID>
                    <Description>"MAG_LC_Wave_Trident"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"657678f2-5924-4d8e-b8ce-a2079154c91b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>123</ID>
                    <Description>"MAG_LowHP_IncreaseDamage_Greataxe"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e1e090ec-ab8c-4db4-a0c3-8b7ab24bb181",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>124</ID>
                    <Description>"MAG_LowHP_IncreaseDamagePsychic_GithGreatsword"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"769adbf8-d3bf-48f7-8c2b-21fb892b1d33",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>125</ID>
                    <Description>"MAG_LowHP_IncreaseDamagePsychic_GithHeavyCrossbow"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"765dd845-e71c-4a96-bff2-b4ecb08478dc",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>126</ID>
                    <Description>"MAG_LowHP_IncreaseDamagePsychic_GithLongsword"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0553ced5-00b0-4c39-8ee4-519f6401f44a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>127</ID>
                    <Description>"MAG_LowHP_IncreaseDamagePsychic_GithShortsword"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"824a370a-5fc6-4435-b58f-33a0d91f5b08",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>128</ID>
                    <Description>"MAG_MagicMissile_HandCrossbow"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c9dcf78e-a46c-4959-aade-707d9dd2c51a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>129</ID>
                    <Description>"MAG_MeleeDebuff_AttackDebuff1_OnDamage_Mace"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"df08ec01-52f0-4fdf-b5e7-4fa0970a480a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>130</ID>
                    <Description>"MAG_MeleeDebuff_AttackDebuff1_OnDamage_Scimitar"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"503b4f8d-da61-4fc1-a4b7-cad124a10c69",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>131</ID>
                    <Description>"MAG_MeleeDebuff_AttackDebuff12versatile_OnDamage_Longsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d116f35c-4399-408c-ba90-b455a5d29a1f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>132</ID>
                    <Description>"MAG_MeleeDebuff_AttackDebuff2_OnDamage_HeavyCrossbow"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"260a44f7-9ce6-4c8c-bcc8-2eb018c00590",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>133</ID>
                    <Description>"MAG_Mobility_ExplosionOnJump_Maul"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"efb003c3-af98-43d7-bcf4-af29702fb531",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>134</ID>
                    <Description>"MAG_Mobility_MomentumOnAttack_Scimitar"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4456e2ec-ba1f-4f53-aab8-847249cabc09",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>135</ID>
                    <Description>"MAG_MonsterSlayer_Glaive"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0c3fcc8d-bf4b-4f65-95ec-a5d1030afe66",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>136</ID>
                    <Description>"MAG_Moonlight_Glaive"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"24f276e7-f08f-44f1-ab97-3df34fd52add",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>137</ID>
                    <Description>"MAG_Murderous_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2384a69e-7d7d-4052-84ee-2f53fa45320f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>138</ID>
                    <Description>"MAG_OB_Paladin_DeathKnight_Longsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0a11f6f4-5605-4dff-a3e6-b172e4dba555",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>139</ID>
                    <Description>"MAG_OfAwareness_Bow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c57ba806-b340-4307-9c37-170792052b8d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>140</ID>
                    <Description>"MAG_OfRupture_Rapier"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2d55309e-52ab-4270-9211-e432e4d8fc59",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>141</ID>
                    <Description>"MAG_OfSpellPower_Quarterstaff"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d09685e8-0122-4ecb-8e9d-2f6f1850427e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>142</ID>
                    <Description>"MAG_Orthon_Hellfire_HandCrossbow"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f5b3b579-3569-4f6d-835c-9c19245152d6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>143</ID>
                    <Description>"MAG_PHB_Defender_Greataxe"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"560fa90c-942b-4661-a86b-e20f9362c9ba",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>144</ID>
                    <Description>"MAG_PHB_DwarvenThrower_Warhammer"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"596202a9-7d6b-4bcf-8748-dbf6aa55b002",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>145</ID>
                    <Description>"MAG_PHB_OfLifestealing_Shortsword"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2b5243b8-658e-4ff2-bccf-0f39e5c53f3e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>146</ID>
                    <Description>"MAG_PHB_OfSpeed_Scimitar"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d60524f4-583e-4b16-91b2-871221d441cf",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>147</ID>
                    <Description>"MAG_PHB_PactKeeper_Quarterstaff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"518d1630-d2bf-4dca-8c24-9d7ba9d529f3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>148</ID>
                    <Description>"MAG_Poison_Greatclub"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fddc251b-22d8-4036-a9fb-85fba8635cf0",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>149</ID>
                    <Description>"MAG_PoR_OfVigilance_Halberd"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"187691ba-7027-49a8-ba74-d0dc5cafbe12",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>150</ID>
                    <Description>"MAG_Primeval_Silver_Longsword"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"20c66f8d-f455-42fc-8e48-543512247e75",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>151</ID>
                    <Description>"MAG_Psychic_MentalSundering_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"33e89c49-6e6f-4143-a57e-c53344422dbf",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>152</ID>
                    <Description>"MAG_Radiant_Radiating_Hammer"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b76baf78-5aaf-4c15-9468-6333a0eb4b92",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>153</ID>
                    <Description>"MAG_RadiantLight_Morningstar"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5637bf93-ebd4-4170-a251-d77d9687c58a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>154</ID>
                    <Description>"MAG_Revitalizing_Warpick"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1a0860bf-aa35-4ac4-b98b-2f9fb04426bd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>155</ID>
                    <Description>"MAG_SHA_SeluneBlessing_Spear"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2eeabe97-8f29-4f4f-827e-6cfcd8fd1779",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>156</ID>
                    <Description>"MAG_SHA_SharBlessing_Spear"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"61f31bf6-47ec-41e1-9385-2f6c26facc87",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>157</ID>
                    <Description>"MAG_Shadow_Battleaxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6364a270-0ca4-45e2-aab2-7673bb5c156e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>158</ID>
                    <Description>"MAG_Shadow_Blinding_Bow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2199a407-0ae8-4ada-b3cd-b19df5adeadd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>159</ID>
                    <Description>"MAG_Shadow_Shortsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82afffba-16cb-47ff-8520-bac8b9c46ad3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>160</ID>
                    <Description>"MAG_Slicing_Shortsword"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"de0e16f6-6dbb-4edd-8ba5-106486b05552",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>161</ID>
                    <Description>"MAG_Spellbreaker_Battleaxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c77553e2-f192-4835-baa9-bdfb63521532",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>162</ID>
                    <Description>"MAG_SpiritualStand_Greataxe"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7bbc2408-14de-4129-bab0-db29927b7f43",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>163</ID>
                    <Description>"MAG_Steadfast_Maul"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9c0b228c-8330-4407-9877-3b980810a1ae",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>164</ID>
                    <Description>"MAG_StrongString_Longbow"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"13236988-83df-4bf2-8005-b4ac31f21ff4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>165</ID>
                    <Description>"MAG_Surgeon_Bonesaw"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"81177d6e-6761-4f8e-9bbe-1e291dd18664",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>166</ID>
                    <Description>"MAG_Surgeon_Leech"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a27e3e3a-ef55-4733-9655-29c7913d26d5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>167</ID>
                    <Description>"MAG_Surgeon_Syringe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"95c3af3c-83b9-4cc0-b633-1493b7daca4d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>168</ID>
                    <Description>"MAG_Surgeon_Trepan"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8fee8eb3-f16b-4b9a-85a0-d46a9cd4937e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>169</ID>
                    <Description>"MAG_SWA_Roaring_Maul"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c1aa1bf6-2bb8-4472-9e18-b5285101c4b3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>170</ID>
                    <Description>"MAG_TheChromatic_Staff"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7e39ad11-f8c3-421a-940c-05348c420c7d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>171</ID>
                    <Description>"MAG_TheClover_Scimitar"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"517231eb-e812-43ed-9ce3-482ba7ed31e6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>172</ID>
                    <Description>"MAG_TheCrimson_Shortsword"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5961d027-75fd-4ad7-964c-8b786b5839fb",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>173</ID>
                    <Description>"MAG_TheDestroyer_Maul"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"89eacf71-5bf6-4e7f-ac9d-e2d7d1d6bcb0",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>174</ID>
                    <Description>"MAG_TheDueller_Rapier"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d49bf05e-4f94-4860-bd8c-ae63dae811be",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>175</ID>
                    <Description>"MAG_TheHunters_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e101101e-e4ba-48b6-9f82-267ca1cd84dc",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>176</ID>
                    <Description>"MAG_TheImpaler_Pike"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"53023726-12bd-4871-805a-66744321dfdb",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>177</ID>
                    <Description>"MAG_TheThorns_Trident"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"daf0be7f-87d9-448a-b94e-471ffec40ac5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>178</ID>
                    <Description>"MAG_TheVictory_Longbow"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7e81bb6a-f465-4fe9-b1db-7ce6198246ba",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>179</ID>
                    <Description>"MAG_TheWoundSeeker_Greatsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"56316970-8adb-4936-8c73-9d8a7c41a8a4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>180</ID>
                    <Description>"MAG_Throwable_Pike"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1047ac9f-7860-44fd-9154-0f06fe64936c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>181</ID>
                    <Description>"MAG_Thunder_ThunderClap_Quarterstaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4708068e-542a-4dfb-b8a0-56e1ee371600",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>182</ID>
                    <Description>"MAG_TWN_Brewery_Greatclub"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82029987-a77c-4bb5-99b9-3b513cb551f1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>183</ID>
                    <Description>"MAG_TWN_Taxblade_Morningstar"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"12e19834-cf53-4207-93c3-5f0facef5889",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>184</ID>
                    <Description>"MAG_Tyrrant_Warhammer"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d0b0b019-5954-4e80-97f5-4206ac1bc0db",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>185</ID>
                    <Description>"MAG_Vicious_Battleaxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3ff89075-1ef3-487e-b456-a1b536fd681a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>186</ID>
                    <Description>"MAG_Vicious_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d3e121fb-09c0-4478-84f1-f4f3e28cd50f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>187</ID>
                    <Description>"MAG_Vicious_Shortbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0a17e147-25bf-4ae5-b24a-3307db4bec56",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>188</ID>
                    <Description>"MAG_Vicious_Shortsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0d3a133c-038c-48c6-a1a0-0faf22ce04cb",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>189</ID>
                    <Description>"MAG_Viconia_Mace"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c31d6b30-2377-4e3c-a602-d5d527defc11",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>190</ID>
                    <Description>"MAG_WATCHER_Human_Crossbow"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f746397f-c489-4121-8499-40017981e290",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>191</ID>
                    <Description>"MAG_WATCHER_Human_Greataxe"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"dd0e9fa2-e012-454d-9f2d-53c0a0776015",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>192</ID>
                    <Description>"MAG_WYR_Hellrider_Longbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"75c90d55-c262-446d-937c-8adbef1e3e93",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>193</ID>
                    <Description>"MAG_WYR_Orin_Bhaalist_Dagger"</Description>
                    <Color>4080FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d90abf24-3c4e-4bbf-84aa-def05ca9962a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>194</ID>
                    <Description>"MAG_WYRM_Commander_Longsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"06fbf04c-41be-4709-91df-76b4cbc9ccf5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>195</ID>
                    <Description>"MAG_WYRM_Farlin_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3d449afb-b99a-492c-b636-85ced6b39e69",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>196</ID>
                    <Description>"MAG_WYRM_UndeadBane_GreatAxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9a81cb70-6a5c-465b-b4b9-0931d544095c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>197</ID>
                    <Description>"MAG_Zhentarim_BloodfeederBlade_Rapier"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a8dc9927-1aa3-45ee-8fea-4106e431c194",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>198</ID>
                    <Description>"MAG_Zhentarim_SleeperDagger"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9829ba14-b236-4e50-ad54-426ff618074b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>199</ID>
                    <Description>"MAG_ZOC_ForceConduit_Halberd"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"64cdd668-5c09-48f3-a064-d4581156ca31",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>200</ID>
                    <Description>"ORI_Wyll_Infernal_Rapier"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e925fb75-96a5-4634-9e0b-a239e48da115",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>201</ID>
                    <Description>"PLA_ConflictedFlind_Flail_Broken"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8a527abd-a2ff-4267-a067-d26bdf6742ee",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>202</ID>
                    <Description>"PLA_WPN_DreadedSkullsFlail"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b551469c-5a53-4df3-a2c9-91516ef55695",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>203</ID>
                    <Description>"PLA_WPN_SwordOfJustice"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"455383a5-1211-4500-85f9-b71fad3fbf15",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>204</ID>
                    <Description>"Quest_GLO_Moonlantern"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9aca1109-a59d-47d3-8f35-f248b70518f9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>205</ID>
                    <Description>"Quest_GLO_Moonlantern_Gale"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c9ebcfae-8c9a-4acc-8a30-da7830b32121",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>206</ID>
                    <Description>"Quest_HAG_HagLair_Staff"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"544e81be-cc28-4fdf-aea7-9a31940af4d0",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>207</ID>
                    <Description>"Quest_SCL_MoonlanternWithPixie"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"04838ed0-5989-4dc3-a9f8-f76402371a8f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>208</ID>
                    <Description>"SHA_SharSpear"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"bca0fca1-b81d-47a7-9be3-18e43a8fe626",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>209</ID>
                    <Description>"TWN_RatCatcher"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7ee0b513-403b-4fe3-a445-b599defa9331",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>210</ID>
                    <Description>"TWN_SharDagger"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7773610f-f246-4837-a75f-2d260f815718",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>211</ID>
                    <Description>"TWN_ShortswordOfStealth"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3c14116f-43da-4e73-92d1-903f46a9d55d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>212</ID>
                    <Description>"UND_Duergar_ShortswordOfFirstBlood"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1e172d76-3433-4ee7-ae1a-9e7d8ae0f12b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>213</ID>
                    <Description>"UND_DuergarBlacksmithHammer"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"733a70a1-2e0f-46f4-aca1-037c0335dc72",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>214</ID>
                    <Description>"UND_DuergarRaft_GruesomeHammer"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4d1f9bce-1884-47d0-a420-69417f397139",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>215</ID>
                    <Description>"UND_DuergarRaft_PestKillerAxe"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6e05319b-d8c4-4dbc-b0f4-cea561810fa6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>216</ID>
                    <Description>"UND_KC_Elder_Warpick"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a42bf0f7-3a78-4aae-b94f-ed92a89e847c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>217</ID>
                    <Description>"UND_Nere_Sword"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"df6698d2-b690-4aea-be83-956d3b2ea97e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>218</ID>
                    <Description>"UND_SharranCrossbow"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"43b7fbf5-7f6e-4e9e-bce7-c679eea44593",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>219</ID>
                    <Description>"UND_SocietyOfBrilliance_ResonanceStaff"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"62da3651-f2e4-4371-b5f2-fd06dd705030",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>220</ID>
                    <Description>"UND_StrengthChair_Leg"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"768010ce-dcfe-43bb-8398-2d681d4fa6eb",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>221</ID>
                    <Description>"UND_SwordInStone"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6d0d3206-50b5-48ed-af92-a146ed6b98f2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>222</ID>
                    <Description>"UND_Tower_StaffBlessMystra"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"da0ba39a-366d-456b-8dbd-1c5790ca40bf",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>223</ID>
                    <Description>"UNI_Bow_SpellslotRecharge"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"db4a3e0f-6315-4337-abce-aad5f38513aa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>224</ID>
                    <Description>"UNI_Cazador_RitualDagger"</Description>
                    <Color>FF00FF</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c5375a2c-f03c-464b-a482-5251debbfabb",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>225</ID>
                    <Description>"UNI_DoomHammer"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2f481fef-1877-4eac-820d-dc3210ff0b36",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>226</ID>
                    <Description>"UNI_RepeatStaff"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"48b4f49b-2937-4664-ac87-7db2c64d09c9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>227</ID>
                    <Description>"UNI_SickleOfBOOOAL"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a07f2e91-e084-4fe5-9dbb-ef7de76a3c0a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>228</ID>
                    <Description>"UNI_StaffOfRain"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"28b38ae1-8d66-4d8e-a4f0-5d4c6c342c59",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>229</ID>
                    <Description>"UNI_SuperheavyWeapon"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b3ed22d9-dd32-46c3-928a-e7253a843dfc",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>230</ID>
                    <Description>"UNI_WYR_Circus_ClownHammer"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"72207448-c6b6-42fc-b9ef-a34fdd3c1265",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>231</ID>
                    <Description>"WPN_Apostle_Scythe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3112f0f5-4073-45d2-8e37-eeafa1558896",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>232</ID>
                    <Description>"WPN_Automaton_Halberd"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f928a70d-5b23-4605-9cae-5342f9ed206e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>233</ID>
                    <Description>"WPN_Battleaxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a086b825-8f17-4f0e-855b-178f8cdc515a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>234</ID>
                    <Description>"WPN_Battleaxe_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c17ee133-cbb5-418f-88be-5ef27991cf50",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>235</ID>
                    <Description>"WPN_Battleaxe_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7faff867-9cb3-432b-aa27-8de281b7428e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>236</ID>
                    <Description>"WPN_Battleaxe_Pact"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"407954e3-71e4-4611-9221-0ba3ea71d6e8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>237</ID>
                    <Description>"WPN_Battleaxe_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f7a7ab99-6902-4389-8134-1fed85e978e1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>238</ID>
                    <Description>"WPN_Battleaxe_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3030f1f1-74fc-4008-9317-80c71075c8e3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>239</ID>
                    <Description>"WPN_Bonesaw"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b9739be6-7c2b-4fe9-be36-13ff1094e79c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>240</ID>
                    <Description>"WPN_Brewer_Mace"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"96df6fd6-a688-47ab-b448-0b6d27d1cf1d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>241</ID>
                    <Description>"WPN_Bugbear_Morningstar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5ca50a09-548b-4134-a0c7-98f10e8d69e6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>242</ID>
                    <Description>"WPN_Club"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d9c87013-1f41-4c17-b71d-f353ec0d64e8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>243</ID>
                    <Description>"WPN_Club_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b30dca22-22bc-496e-b3b6-dd5744b73869",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>244</ID>
                    <Description>"WPN_Club_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5d24f624-1145-46c5-b595-3f2c8b2f314e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>245</ID>
                    <Description>"WPN_Dagger"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"569b0f3d-abcd-4b01-aaf0-979091288163",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>246</ID>
                    <Description>"WPN_Dagger_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1eab180b-5bf9-48ea-aece-7ba20d1deb78",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>247</ID>
                    <Description>"WPN_Dagger_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c68026c8-8af9-4a05-b77a-246a01bafe61",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>248</ID>
                    <Description>"WPN_Dagger_B"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c68026c8-8af9-4a05-b77a-246a01bafe61",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>249</ID>
                    <Description>"WPN_Dagger_C"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fbb9fdb1-932d-47df-81fb-5785cb19d3a3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>250</ID>
                    <Description>"WPN_Dagger_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9ddcb3b2-14fb-48d7-9047-cd2ee34de51c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>251</ID>
                    <Description>"WPN_Dagger_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6a321455-d00f-4164-ab12-3601fef2ae6e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>252</ID>
                    <Description>"WPN_Dagger_Shar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"258ce9f3-3f32-4546-ae6e-196b3e8e91b5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>253</ID>
                    <Description>"WPN_Dart"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fb08eef6-f6a0-454e-ab14-c1470f3ba18d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>254</ID>
                    <Description>"WPN_Dart_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5557cbf6-ce24-48de-beed-3be1a77e1c82",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>255</ID>
                    <Description>"WPN_Dart_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e292c502-b116-4a46-a232-dd53f7838f6f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>256</ID>
                    <Description>"WPN_Dart_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82d1c904-861b-4c76-8df6-2643b46dbb81",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>257</ID>
                    <Description>"WPN_DeathKnight_Longsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a4338d7c-5b70-4076-9711-d3803fab2e1b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>258</ID>
                    <Description>"WPN_Djinni_Scimitar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1576903a-cb77-4a05-be24-1714d8c61e34",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>259</ID>
                    <Description>"WPN_Djinni_Scimitar_PlanarAlly"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"96f7647b-7485-4c0c-aaad-73a332d8e626",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>260</ID>
                    <Description>"WPN_Flail"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9eadef92-5dd0-408e-9b55-1cf791cafe9d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>261</ID>
                    <Description>"WPN_Flail_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9076abf1-1029-4be9-a7cf-428d2b6fdea5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>262</ID>
                    <Description>"WPN_Flail_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"23ab9011-ef66-463e-a8ee-012321be6d1c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>263</ID>
                    <Description>"WPN_Flail_Air_Myrmidon"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"71f5b932-137f-4e05-9392-e6b921e3aca6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>264</ID>
                    <Description>"WPN_Flail_Air_Myrmidon_ConjureElemental"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8f8ad4f1-ee45-45f5-9368-3da979ada65a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>265</ID>
                    <Description>"WPN_Flail_Air_Myrmidon_Wildshape"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"229dd0c4-6b13-4dbd-be48-0fedf292700a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>266</ID>
                    <Description>"WPN_Flail_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4ef7dcd7-3328-4218-b0d3-520f2afaa529",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>267</ID>
                    <Description>"WPN_Flail_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"04ae8618-3f49-453a-91f2-e5ac68cf366f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>268</ID>
                    <Description>"WPN_Glaive"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"99f3b2d9-e03d-4cd5-9a67-5435a95682da",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>269</ID>
                    <Description>"WPN_Glaive_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"15d2830c-ac76-4b5b-969d-05197875b1c2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>270</ID>
                    <Description>"WPN_Glaive_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"bc1c2a84-27f5-46e4-b4b4-0f5ca534469c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>271</ID>
                    <Description>"WPN_Glaive_Pact"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e7dab8bd-8037-4d8e-9c4e-ebec705912aa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>272</ID>
                    <Description>"WPN_Glaive_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fde218da-d768-4be8-b95f-586a124357d3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>273</ID>
                    <Description>"WPN_Glaive_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"be861724-206e-483e-a42d-9dd131030ad6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>274</ID>
                    <Description>"WPN_Gnoll_Flind_Flail"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"608e265d-f81b-4c13-a786-e5602852fcf4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>275</ID>
                    <Description>"WPN_Gnoll_Sword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3af0f251-36b5-425f-8d2a-f81559a70967",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>276</ID>
                    <Description>"WPN_Goblin_Mace"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7ebf3d2b-39ff-4a18-9114-4d09d17f432f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>277</ID>
                    <Description>"WPN_Goblin_Quarterstaff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"58c90cf9-5541-4909-a853-d1a0ca31c046",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>278</ID>
                    <Description>"WPN_Goblin_Scimitar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"288356cc-0c6b-43c1-b049-dde418faf1f2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>279</ID>
                    <Description>"WPN_Goblin_Shortbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fd6f48fc-b153-4e6b-9a7f-86ac2963c95f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>280</ID>
                    <Description>"WPN_Goblin_Spear"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"81b017b5-d185-4026-8871-a053aca8648c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>281</ID>
                    <Description>"WPN_Greataxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d5712e24-ce9e-42ce-8fad-6e049b62c28c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>282</ID>
                    <Description>"WPN_Greataxe_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"afbfaee7-e2cd-48e7-8c46-d2377c7320e3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>283</ID>
                    <Description>"WPN_Greataxe_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ce8a894c-3dc6-48dc-bb8f-af5390890d43",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>284</ID>
                    <Description>"WPN_Greataxe_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"70b863dd-fc73-4276-b1d2-330d5e54fe3f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>285</ID>
                    <Description>"WPN_Greataxe_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a8f37e10-8590-4a65-85d1-29bf8ef5bd64",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>286</ID>
                    <Description>"WPN_Greatclub"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"19ce6720-03b6-4d22-bf35-4963b510d1da",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>287</ID>
                    <Description>"WPN_Greatclub_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d64e1a13-18a5-4cdc-ac02-977523435f8f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>288</ID>
                    <Description>"WPN_Greatclub_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"adf0ef57-7811-40ed-9d29-05c6336f9e1f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>289</ID>
                    <Description>"WPN_Greatclub_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"665e1c25-5c1f-48b2-a075-ee6409e8b019",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>290</ID>
                    <Description>"WPN_Greatsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ecfb9f69-5bc3-402e-acd8-c91d57e28403",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>291</ID>
                    <Description>"WPN_Greatsword_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1a2a58b7-4bd5-44d5-b1fe-8cd7e5b53def",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>292</ID>
                    <Description>"WPN_Greatsword_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2741505a-9d0b-4c9e-adcd-2e6339491e95",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>293</ID>
                    <Description>"WPN_Greatsword_Gith"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d1082e88-b1e2-479d-913f-1413784d95a1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>294</ID>
                    <Description>"WPN_Greatsword_Pact"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e90936db-7f65-446c-819d-c7fc6ba44d6c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>295</ID>
                    <Description>"WPN_Greatsword_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"dfc51f62-6a05-4bd4-ae92-d1a8a2e3d5a7",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>296</ID>
                    <Description>"WPN_Greatsword_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82311843-dae9-4bda-86fb-40b722daf82e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>297</ID>
                    <Description>"WPN_Halberd"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f928a70d-5b23-4605-9cae-5342f9ed206e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>298</ID>
                    <Description>"WPN_Halberd_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d1019d9d-e5ae-4601-8a63-1b33421926e1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>299</ID>
                    <Description>"WPN_Halberd_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0e3b29e8-572f-459d-b382-234ec53b1c08",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>300</ID>
                    <Description>"WPN_Halberd_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"723a5397-cd16-4969-8e47-f00a1ba7c368",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>301</ID>
                    <Description>"WPN_Halberd_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7addb7c0-f428-4033-9065-f4ad6e4c7e81",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>302</ID>
                    <Description>"WPN_Handaxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"46b64a36-8446-45bd-98e8-ee81e3136baa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>303</ID>
                    <Description>"WPN_Handaxe_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7a05135d-b285-4186-8a32-a870f1684b60",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>304</ID>
                    <Description>"WPN_Handaxe_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"76045155-50ca-4047-a23b-46c1c4ab085e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>305</ID>
                    <Description>"WPN_Handaxe_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2c362536-7ffa-43f4-926c-70dc682ffbff",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>306</ID>
                    <Description>"WPN_HandCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a5d843ab-c3af-4e60-a925-bb2e15828938",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>307</ID>
                    <Description>"WPN_HandCrossbow_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d2f396c2-9b1b-4eea-bf21-2f25934f092d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>308</ID>
                    <Description>"WPN_HandCrossbow_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ab150a98-0a8e-4ee2-9dca-580d77f99be3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>309</ID>
                    <Description>"WPN_HandCrossbow_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1f5cbcc5-5ba7-4273-ab53-7a12a40cc438",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>310</ID>
                    <Description>"WPN_HandCrossbow_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"794f58a7-4bc5-4c98-8e66-7a8e242fb7ef",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>311</ID>
                    <Description>"WPN_Harpy_Club"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0ca0e540-dabe-4bf4-9e23-c006f03ffae2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>312</ID>
                    <Description>"WPN_HeavyCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"04622e3d-5b3f-4f2c-a0db-513a717d911f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>313</ID>
                    <Description>"WPN_HeavyCrossbow_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6af59cba-cc38-4511-9c3b-75caac4b96b5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>314</ID>
                    <Description>"WPN_HeavyCrossbow_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"59c190d2-4b91-44f5-a720-f75d338dd341",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>315</ID>
                    <Description>"WPN_HeavyCrossbow_B"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6af59cba-cc38-4511-9c3b-75caac4b96b5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>316</ID>
                    <Description>"WPN_HeavyCrossbow_Gith"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b674ea52-2b6f-4977-b6d5-98810304a98b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>317</ID>
                    <Description>"WPN_HeavyCrossbow_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f75005ab-40c3-4e42-b3ed-2b2fb8aa010a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>318</ID>
                    <Description>"WPN_HeavyCrossbow_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"181104f6-6423-42de-b624-e225e5fb8a4d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>319</ID>
                    <Description>"WPN_Imp_LightCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"43b7fbf5-7f6e-4e9e-bce7-c679eea44593",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>320</ID>
                    <Description>"WPN_Javelin"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0a7adc8d-b561-4f81-a8f2-ec07b5d54955",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>321</ID>
                    <Description>"WPN_Javelin_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b908f109-b379-4a49-8f41-5b7f154d9b76",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>322</ID>
                    <Description>"WPN_Javelin_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d8461adb-44f5-49b3-87ff-ea652f6d4081",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>323</ID>
                    <Description>"WPN_Javelin_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5cc3db84-3891-4795-afa3-d3cbfffc066e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>324</ID>
                    <Description>"WPN_Katana"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7050c02e-f0e1-46b8-9400-2514805ecd2e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>325</ID>
                    <Description>"WPN_KingsKnife"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5908898d-5d9e-40de-ab07-3f8fb5f0174c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>326</ID>
                    <Description>"WPN_Kuotoa_Spear"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8fdd7b33-6740-4d15-935c-9e54f54e16d4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>327</ID>
                    <Description>"WPN_Lantern"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"81705db9-5b32-4ccd-91be-f8bad863ec48",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>328</ID>
                    <Description>"WPN_Leech"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"81158eec-1fd0-4fd7-8b02-ce7f5e45f8b5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>329</ID>
                    <Description>"WPN_LightCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"43b7fbf5-7f6e-4e9e-bce7-c679eea44593",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>330</ID>
                    <Description>"WPN_LightCrossbow_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"509dd5c3-7c72-4335-9b23-19a14a884f2e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>331</ID>
                    <Description>"WPN_LightCrossbow_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fa9b6992-dbfc-4265-996b-73d9836cf7fe",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>332</ID>
                    <Description>"WPN_LightCrossbow_Makeshift"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"52f9bd01-fe6e-416d-896e-8600446abb0d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>333</ID>
                    <Description>"WPN_LightCrossbow_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"58f57bdc-1d89-4b60-aedc-11f36e270205",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>334</ID>
                    <Description>"WPN_LightCrossbow_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6f0568b1-86ac-4039-8d3a-5db844b55fe8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>335</ID>
                    <Description>"WPN_LightHammer"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"494f21ac-5a1b-4e91-bd30-551b79532516",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>336</ID>
                    <Description>"WPN_LightHammer_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d0419aaf-9e20-4029-b8e9-9e1a62661b13",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>337</ID>
                    <Description>"WPN_LightHammer_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"647f2f89-f10f-4def-ba9e-9078e49b6157",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>338</ID>
                    <Description>"WPN_LightHammer_B"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d0bf4aef-e423-49ab-9177-c86b2a8efc9a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>339</ID>
                    <Description>"WPN_LightHammer_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b9a01258-ae0b-4217-82d9-a9f6197b9c89",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>340</ID>
                    <Description>"WPN_LightHammer_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0c8a9530-273d-4f64-81b9-0d169d890483",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>341</ID>
                    <Description>"WPN_Longbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"86e3d864-309c-4c17-ba38-877ce487d481",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>342</ID>
                    <Description>"WPN_Longbow_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"049173ec-636a-487e-a9ed-bfafeadf6bb7",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>343</ID>
                    <Description>"WPN_Longbow_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"118967f7-14de-41fa-bec8-3ba383252e9a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>344</ID>
                    <Description>"WPN_Longbow_B"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"049173ec-636a-487e-a9ed-bfafeadf6bb7",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>345</ID>
                    <Description>"WPN_Longbow_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"27943fda-2491-4e67-a740-559d02dc08fa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>346</ID>
                    <Description>"WPN_Longsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1865323f-b428-4791-a0a9-578841e57463",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>347</ID>
                    <Description>"WPN_Longsword_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3fc2ba50-3070-4caa-abe8-3bf885969bde",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>348</ID>
                    <Description>"WPN_Longsword_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e3b2adb6-7493-466e-9c65-4281fb74e83f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>349</ID>
                    <Description>"WPN_Longsword_Gith"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"907a794b-b089-406b-880d-6f2df2bb3f13",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>350</ID>
                    <Description>"WPN_Longsword_GuardianOfFaith_Evil"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"083ddacf-e03c-4681-887b-80dee8158b26",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>351</ID>
                    <Description>"WPN_Longsword_GuardianOfFaith_Good"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"dd0e60fd-a334-411b-97cf-fa6a015c578b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>352</ID>
                    <Description>"WPN_Longsword_GuardianOfFaith_Neutral"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82d42ba1-5488-49a7-b4db-32332cee7521",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>353</ID>
                    <Description>"WPN_Longsword_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f344c6b2-64bc-4c6d-a66d-5d3966191210",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>354</ID>
                    <Description>"WPN_Longsword_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"dddd2204-0ee3-47b0-a7ea-6b5216a65e89",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>355</ID>
                    <Description>"WPN_Mace"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3186796d-3ab3-4d49-bfc2-cba1aff0cf5a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>356</ID>
                    <Description>"WPN_Mace_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5a948b12-ca43-4256-9821-0d151036dbd1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>357</ID>
                    <Description>"WPN_Mace_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f203a318-ea9a-4117-8d27-299dabafd1d3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>358</ID>
                    <Description>"WPN_Mace_Deva"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c0fb0a11-1f29-470c-a95b-102377ef2356",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>359</ID>
                    <Description>"WPN_Mace_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"01a26e77-c4bc-4237-ae71-59c634723a95",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>360</ID>
                    <Description>"WPN_Mace_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ce1c45a5-5606-4604-9afa-beca19fd03e1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>361</ID>
                    <Description>"WPN_MagicStaff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"48318705-311a-4b4c-b911-18d260d6db0f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>362</ID>
                    <Description>"WPN_Maul"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5487ceb4-b009-46ae-8ed6-cd3baaf0a18d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>363</ID>
                    <Description>"WPN_Maul_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7e8ef269-0e7b-4352-8828-89c5fced943c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>364</ID>
                    <Description>"WPN_Maul_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"904286be-03fc-4755-adf0-9fd5f44942f4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>365</ID>
                    <Description>"WPN_Maul_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"beb4fa70-6b2b-4e7b-b0c5-3fb67bb48210",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>366</ID>
                    <Description>"WPN_Maul_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"67e97333-2225-4797-9c06-0a0e08e6edd7",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>367</ID>
                    <Description>"WPN_MeatCleaver"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b6b4ac25-e54b-441f-b6d3-423ea728cfb1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>368</ID>
                    <Description>"WPN_Merregon_Halberd"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c86a3bf4-16b4-4d76-a33d-3df5c265aca8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>369</ID>
                    <Description>"WPN_MinePickaxe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8693aa7e-cd47-4990-80e7-51041f036400",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>370</ID>
                    <Description>"WPN_Minotaur_Greatclub"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"20bd2850-f6b3-4f13-bf96-c566d8df0de4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>371</ID>
                    <Description>"WPN_Morningstar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"26a9fba6-1a60-4691-84ea-da7ffcb304e0",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>372</ID>
                    <Description>"WPN_Morningstar_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"deea755b-5335-49d9-bd0e-dbaab9eaf94c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>373</ID>
                    <Description>"WPN_Morningstar_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9e2c45b2-0411-42cc-bac6-6222c1334cb0",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>374</ID>
                    <Description>"WPN_Morningstar_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ea00c5c9-b010-4fa3-bf10-0c7b8c5e7854",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>375</ID>
                    <Description>"WPN_Morningstar_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f8856d2d-ffda-417c-b7a8-c7aa757903b7",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>376</ID>
                    <Description>"WPN_Ogre_Club"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3186614b-537e-44f1-82bc-c9edba59e593",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>377</ID>
                    <Description>"WPN_Ogre_Greatclub"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"01da5a5b-97cd-4989-9ae3-af646eb35bc9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>378</ID>
                    <Description>"WPN_Orthon_Crossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f554e750-4a86-45d7-b1a5-027e27df55ef",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>379</ID>
                    <Description>"WPN_Orthon_ShortSword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0d5e17a5-510d-468a-8607-77a326bc453c",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>380</ID>
                    <Description>"WPN_Pike"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"baa5b139-42ad-40fd-b6c3-6b52b092c48e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>381</ID>
                    <Description>"WPN_Pike_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"40fa8049-b6c1-4463-b212-52ad13b5d687",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>382</ID>
                    <Description>"WPN_Pike_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"50ffcd8e-eaa2-479c-b8ed-117ef5436b49",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>383</ID>
                    <Description>"WPN_Pike_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"148cd3dd-bf44-4489-a593-0ead19359aa6",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>384</ID>
                    <Description>"WPN_Pike_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0eddcd68-36fb-4c9f-8cbb-66513d8d718e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>385</ID>
                    <Description>"WPN_Pitchfork"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c8274575-61a2-43a7-bde0-65a278dde287",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>386</ID>
                    <Description>"WPN_Quarterstaff"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"96e2abaf-78ff-4dcb-a6a3-a5f0c348bd9f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>387</ID>
                    <Description>"WPN_Quarterstaff_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2fa18ee4-92df-486f-97d2-dd0a720b6fad",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>388</ID>
                    <Description>"WPN_Quarterstaff_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e1e112b2-5465-4e37-acdc-372666ec1521",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>389</ID>
                    <Description>"WPN_Quarterstaff_Druid"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b5c85eb7-ed4f-4e90-a317-5547ddaf3650",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>390</ID>
                    <Description>"WPN_Quarterstaff_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"44f1ec46-4976-41ac-9697-313083bbc3c1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>391</ID>
                    <Description>"WPN_Quaterstaff_Dryad"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"36aab945-ad5d-46b5-95ed-ab9cf1a5a228",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>392</ID>
                    <Description>"WPN_Quaterstaff_Dryad_ConjureWoodlandBeings"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b61f3c6e-a224-4af8-ad16-51b3799e7715",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>393</ID>
                    <Description>"WPN_Quaterstaff_Mindflayer"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f606e1cb-b6ad-4787-a633-d74c480e4eea",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>394</ID>
                    <Description>"WPN_Rapier"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7061f489-4b13-4982-aa09-cf0ad961e75f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>395</ID>
                    <Description>"WPN_Rapier_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5a6cea10-b3f6-4370-8eed-0b69b4ba531a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>396</ID>
                    <Description>"WPN_Rapier_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5c572e8e-8693-48cf-b494-2df0341f7ced",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>397</ID>
                    <Description>"WPN_Rapier_Pact"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"705662e8-2a7f-4c7e-b0a0-e505395a45e3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>398</ID>
                    <Description>"WPN_Rapier_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8b58571f-5d21-4fb6-80eb-bc1081f809d4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>399</ID>
                    <Description>"WPN_Rapier_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1958c259-3772-46ac-9de3-741806f18703",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>400</ID>
                    <Description>"WPN_Sahuagin_Longbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2b72f224-a182-43c7-97e9-dc9a6ba4f9f5",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>401</ID>
                    <Description>"WPN_Sahuagin_Spear_A"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"b8878c58-e510-4c2f-97f0-da9cc442a75f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>402</ID>
                    <Description>"WPN_Sahuagin_Spear_B"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8323e1ec-1588-4044-9119-70b87a5fe938",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>403</ID>
                    <Description>"WPN_Salami"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e082f373-81ec-4f4b-818b-9ee86952e2fa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>404</ID>
                    <Description>"WPN_Scimitar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"868217db-9dcb-414c-bb88-e321ab3e0349",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>405</ID>
                    <Description>"WPN_Scimitar_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7cc7a0e1-d0b8-4569-afb2-d538e8941894",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>406</ID>
                    <Description>"WPN_Scimitar_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5193af64-48c1-406f-90bf-87f7f01b4684",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>407</ID>
                    <Description>"WPN_Scimitar_Fire_Myrmidon"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1803db62-d4c8-4f36-a9b9-49e114d07570",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>408</ID>
                    <Description>"WPN_Scimitar_Fire_Myrmidon_ConjureElemental"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"cac16ce7-f5fd-4314-8b79-94b56d6a8a09",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>409</ID>
                    <Description>"WPN_Scimitar_Fire_Myrmidon_Wildshape"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"19710a61-25df-4851-884e-1c33d2fa4d45",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>410</ID>
                    <Description>"WPN_Scimitar_FlameBlade"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"dfb5a6ef-baee-4c0e-9b9d-7f5bd9458131",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>411</ID>
                    <Description>"WPN_Scimitar_FlameBlade_4"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"7bbfed72-1302-4709-8da5-2220343d7d29",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>412</ID>
                    <Description>"WPN_Scimitar_FlameBlade_6"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"86792fbe-2344-4742-b114-e3836442c943",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>413</ID>
                    <Description>"WPN_Scimitar_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1a63e2ff-7a05-4546-9ef1-75a4b151f513",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>414</ID>
                    <Description>"WPN_Scimitar_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"134cca90-23ea-497d-8698-b7a66bab59d3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>415</ID>
                    <Description>"WPN_Scimitar_Shar"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"afdc3411-7dad-4483-8ee1-e6a8f37b3ee4",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>416</ID>
                    <Description>"WPN_ShadowBlade"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"66d6cbd5-c231-4fc4-a3b7-80f781b579f7",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>417</ID>
                    <Description>"WPN_Shortbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c5403c1d-f372-43e1-927a-9189e9e3545d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>418</ID>
                    <Description>"WPN_Shortbow_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a46173b7-afd6-48e0-9c76-817acd027574",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>419</ID>
                    <Description>"WPN_Shortbow_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d9a98dce-1027-4324-939c-3c9cfe776731",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>420</ID>
                    <Description>"WPN_Shortbow_Makeshift"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82992370-cb61-4381-b390-891a3a9bd075",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>421</ID>
                    <Description>"WPN_Shortbow_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d28a5c6d-b569-40b7-abd5-4b6f325c98ce",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>422</ID>
                    <Description>"WPN_Shortbow_Skeleton_AnimateDead"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82992370-cb61-4381-b390-891a3a9bd075",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>423</ID>
                    <Description>"WPN_Shortsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"467ddb4f-6791-41fa-99f7-ee8620d63bbe",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>424</ID>
                    <Description>"WPN_Shortsword_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"261b946f-154b-4f75-8985-cab6531034a2",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>425</ID>
                    <Description>"WPN_Shortsword_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"0839fb15-24ab-4c3a-b168-413a47ed710a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>426</ID>
                    <Description>"WPN_Shortsword_Gith"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4b54911a-a32d-48ad-8691-ff28801e1275",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>427</ID>
                    <Description>"WPN_Shortsword_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"276e6ec4-7169-4fea-955e-43f26e82214e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>428</ID>
                    <Description>"WPN_Shortsword_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9d66df2d-8e8f-4798-8684-77b738d26704",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>429</ID>
                    <Description>"WPN_Sickle"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"50d677ed-3a0e-40e9-8291-ee6823af5672",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>430</ID>
                    <Description>"WPN_Sickle_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4c6e48bc-2651-45ec-9f6d-83b585a7edfc",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>431</ID>
                    <Description>"WPN_Sickle_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1d75dc84-b276-47b0-a0be-a5b25dfcb086",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>432</ID>
                    <Description>"WPN_SkullFlail"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4c86f6ac-5829-41f2-a3f0-d3e893334961",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>433</ID>
                    <Description>"WPN_SkullFlail_1"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"05ca18da-41f4-4385-b370-0f75a989e119",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>434</ID>
                    <Description>"WPN_Sling"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d31af642-ae35-4f22-b7a6-100f3048be33",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>435</ID>
                    <Description>"WPN_Sling_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fa97e363-e81f-49f9-b663-62aae8c552ce",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>436</ID>
                    <Description>"WPN_Spear"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9f0f1c0e-012d-44e1-9b29-86c64d2bf675",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>437</ID>
                    <Description>"WPN_Spear_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"158e6f29-89e9-4279-8f8f-85078f047225",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>438</ID>
                    <Description>"WPN_Spear_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"74d9758a-84e9-4244-9ae8-14acee76acb3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>439</ID>
                    <Description>"WPN_Spear_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"9b3005ad-3457-4003-a976-f549f360c378",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>440</ID>
                    <Description>"WPN_Spear_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"86450ec8-d876-457f-92c0-7bb11e8f38f8",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>441</ID>
                    <Description>"WPN_Syringe"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"75cea463-4395-4600-ad93-7017415b16e3",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>442</ID>
                    <Description>"WPN_Torch"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"50c43f27-a12e-412c-88f0-56e15eba692a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>443</ID>
                    <Description>"WPN_Torch_Blue"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4668297e-7fc8-4384-af34-165813e9abe1",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>444</ID>
                    <Description>"WPN_Torch_Green"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fabf8b48-9c73-498a-a4ad-f9bf07024f19",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>445</ID>
                    <Description>"WPN_Torch_Purple"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"f7c72034-b7ed-459f-9f2f-3c42144271ef",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>446</ID>
                    <Description>"WPN_Torch_StartLit"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"8d175e5e-355e-4b27-9890-d35e36204487",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>447</ID>
                    <Description>"WPN_Tower_AutomatonHalberd"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1534c8ee-3651-477d-999c-b22efc9f850d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>448</ID>
                    <Description>"WPN_ToySword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"5e651778-cc78-425e-b27d-483b1c8afa82",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>449</ID>
                    <Description>"WPN_Trepan"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"764dcd70-9206-457c-9366-7aa9e3370514",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>450</ID>
                    <Description>"WPN_Trident"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"d3807461-7c32-44ae-9aba-49ef4d3bf35e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>451</ID>
                    <Description>"WPN_Trident_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"2fab5801-76b1-4669-95d9-7df76bed12dd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>452</ID>
                    <Description>"WPN_Trident_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6cf827d6-5bae-480a-a1b4-d7fdb0e68801",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>453</ID>
                    <Description>"WPN_Trident_Pact"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fd1b4c45-e2df-4add-bc56-697d0339c4bd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>454</ID>
                    <Description>"WPN_Trident_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3c4c27dd-dd67-456c-9567-bc9fb7867238",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>455</ID>
                    <Description>"WPN_Trident_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"27ef84b1-ea40-4f06-a013-f6281511f0e9",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>456</ID>
                    <Description>"WPN_Trident_Water_Myrmidon"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c818edc1-85c4-4c4b-bd62-03ba59265922",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>457</ID>
                    <Description>"WPN_Trident_Water_Myrmidon_ConjureElemental"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ba86b029-9232-4ad2-9e2d-9edcdd1d728b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>458</ID>
                    <Description>"WPN_Trident_Water_Myrmidon_WildShape"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"639a6279-f487-4783-9381-493f63e66ade",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>459</ID>
                    <Description>"WPN_Warhammer"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"6b17998d-2e79-405d-8b1f-beb53658312f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>460</ID>
                    <Description>"WPN_Warhammer_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3e1b3db9-036e-4931-ab92-c3730a1c3d5f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>461</ID>
                    <Description>"WPN_Warhammer_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e6b027a7-40bb-445e-b199-38b08d2b4832",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>462</ID>
                    <Description>"WPN_Warhammer_Azer"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"22baa548-56a4-494c-a9d0-4880d6f1da91",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>463</ID>
                    <Description>"WPN_Warhammer_B"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3e1b3db9-036e-4931-ab92-c3730a1c3d5f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>464</ID>
                    <Description>"WPN_Warhammer_Pact"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"fdaf8461-4d1a-4364-8d7d-4dd9ce824a1e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>465</ID>
                    <Description>"WPN_Warhammer_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a75ebd91-46dd-4c6a-881e-878e5ba6f67a",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>466</ID>
                    <Description>"WPN_Warhammer_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ed53c828-d185-408e-8381-9b042849de8e",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>467</ID>
                    <Description>"WPN_WarPick"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a088775a-8f75-42f2-aa74-76a3f80701fa",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>468</ID>
                    <Description>"WPN_WarPick_1"</Description>
                    <Color>00FF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"75586d3e-21b2-4d94-ac99-99a6b0e8c3dd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>469</ID>
                    <Description>"WPN_WarPick_2"</Description>
                    <Color>FFFF00</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"a5012da9-9cfa-467b-901a-61e33db55516",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>470</ID>
                    <Description>"WPN_WarPick_REF"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"4d76009b-7410-424a-8391-362aa95852cd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>471</ID>
                    <Description>"WPN_Warpick_Rusty"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"1d6d5983-4546-4eba-b9e6-d23021d08805",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>472</ID>
                    <Description>"WPN_Watcher_Greatsword"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c25e9381-7fbd-4e07-9383-9df8aa43d4ed",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>473</ID>
                    <Description>"WPN_Watcher_Greatsword_B"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"ebdf1022-bb30-4a03-ac29-82f488bfce4f",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>474</ID>
                    <Description>"WPN_Watcher_HeavyCrossbow"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"e2391c41-845c-4d8e-9aba-d2392e193bfd",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>475</ID>
                    <Description>"WPN_WhippingCane"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"3a9e4e60-9f58-4fb9-8a16-4cf784ad6f0d",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>476</ID>
                    <Description>"WPN_WoodWoad_Club"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"c71e2798-31ae-4f57-8073-c6195c2e9d02",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                    <ID>477</ID>
                    <Description>"WYR_Circus_HandaxeReturning"</Description>
                    <Color>C0C0C0</Color>
                    <VariableType>Auto Assembler Script</VariableType>
                    <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local items = {
"82999790-f80d-47f7-9383-9bb6cf57a10b",
}

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

for i = 1, #items do
  local item = items[i]
  writeString(cmdStr2, item)
  writeBytes(cmdStr2 + #item, 0)

  PrepareCall("TemplateAddTo")
  writePointer(cmdArgs + 0x08, cmdStr2) -- item
  writePointer(cmdArgs + 0x18, cmdStr1) -- player
  writeQword(cmdArgs + 0x28, 1) -- quantity
  writeQword(cmdArgs + 0x38, 0)
  writeQword(cmdArgs + 0x48, 0)
  executeCodeEx(0, nil, cmdCall)
end

{$asm}

[DISABLE]
                    </AssemblerScript>
                </CheatEntry>
            </CheatEntries>
        </CheatEntry>
    </CheatEntries>
    <UserdefinedSymbols>
        <SymbolEntry>
            <Name>playerCharactersPtr</Name>
            <Address>1D4526F0000</Address>
        </SymbolEntry>
    </UserdefinedSymbols>
    <DisassemblerComments>
        <DisassemblerComment>
            <Address>"bg3.exe"+25C0F20</Address>
            <Comment>Zanzer</Comment>
        </DisassemblerComment>
    </DisassemblerComments>
</CheatTable>
